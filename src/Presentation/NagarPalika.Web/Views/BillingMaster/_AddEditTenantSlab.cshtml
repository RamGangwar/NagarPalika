@using NagarPalika.Application.Commands.TenantSlabs
@model CreateTenantSlabCommand


<div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
        <div class="modal-header">
            @{
                if (Model.TenantSlabId > 0)
                {
                    <h5 class="modal-title">Edit Tenant Slab</h5>
                }
                else
                {
                    <h5 class="modal-title">Add Tenant Slab</h5>
                }
            }

            <button type="button" class="btn-close popupclose" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">

            @using (Html.BeginForm("AddEditTenantSlab", "BillingMaster", FormMethod.Post, new { @class = "row g-3", id = "frmAddEditTenantSlab", enctype = "multipart/form-data" }))
            {

                @Html.HiddenFor(h=>h.TenantSlabId)
                <div class="col-md-6">
                    @{
                        List<SelectListItem> items = new List<SelectListItem>();
                        items.Add(new SelectListItem { Text = "Residential", Value = "Residential", Selected = true });
                        items.Add(new SelectListItem { Text = "Commercial", Value = "Commercial" });
                    }
                    @Html.LabelFor(l=>l.PropertyType,"Property Type*" ,new{@class="form-label"})
                    @Html.DropDownListFor(m=>m.PropertyType,new SelectList(@items,"Value","Text"),"Select Property Type",new{@class="form-control"})
                    @Html.ValidationMessageFor(v=>v.PropertyType)
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(l=>l.Value,"Value*" ,new{@class="form-label"})
                    @Html.TextBoxFor(m=>m.Value,new{@class="form-control", placeholder="Value",onkeypress="return isNumberKey(event,this)"})
                    @Html.ValidationMessageFor(v=>v.Value)
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(l=>l.SlabStartValue,"Start Value*" ,new{@class="form-label"})
                    @Html.TextBoxFor(m=>m.SlabStartValue,new{@class="form-control", placeholder="Start Value",onkeypress="return isNumberKey(event,this)"})
                    @Html.ValidationMessageFor(v=>v.SlabStartValue)
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(l=>l.SlabEndValue,"End Value*" ,new{@class="form-label"})
                    @Html.TextBoxFor(m=>m.SlabEndValue,new{@class="form-control", placeholder="End Value",onkeypress="return isNumberKey(event,this)"})
                    @Html.ValidationMessageFor(v=>v.SlabEndValue)
                </div>


                <div class="text-end">
                    <button type="button" class="btn btn-secondary popupclose" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            }
        </div>
    </div>
</div>
